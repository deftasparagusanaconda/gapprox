#Author: T. Jeffrin Santon
#Date: 28/02/2025
def linear_d_approx(data_points , point_of_approx , position):
    #Slope calculation
    slope = (data_points[position + 1][1] - data_points[position - 1][1])/(data_points[position + 1][0] - data_points[position - 1][0])
    print(slope) #debugging
    output = "y - " + str(point_of_approx[1]) + " = "  + str(slope) + "(x - " + str(point_of_approx[0])+ ")"
    return output

points = [
        [1.000, 1.000], [1.010, 1.020], [1.020, 1.041], [1.030, 1.062], [1.040, 1.082],
    [1.051, 1.104], [1.061, 1.126], [1.071, 1.147], [1.081, 1.169], [1.091, 1.191],
    [1.101, 1.213], [1.111, 1.235], [1.121, 1.258], [1.131, 1.280], [1.141, 1.303],
    [1.152, 1.326], [1.162, 1.349], [1.172, 1.372], [1.182, 1.396], [1.192, 1.419],
    [1.202, 1.443], [1.212, 1.467], [1.222, 1.491], [1.232, 1.516], [1.242, 1.540],
    [1.253, 1.565], [1.263, 1.589], [1.273, 1.614], [1.283, 1.639], [1.293, 1.664],
    [1.303, 1.690], [1.313, 1.715], [1.323, 1.741], [1.333, 1.766], [1.343, 1.792],
    [1.354, 1.818], [1.364, 1.844], [1.374, 1.870], [1.384, 1.896], [1.394, 1.923],
    [1.404, 1.949], [1.414, 1.976], [1.424, 2.002], [1.434, 2.029], [1.444, 2.056],
    [1.455, 2.083], [1.465, 2.110], [1.475, 2.137], [1.485, 2.165], [1.495, 2.192],
    [1.505, 2.220], [1.515, 2.247], [1.525, 2.275], [1.535, 2.303], [1.545, 2.331],
    [1.556, 2.359], [1.566, 2.387], [1.576, 2.415], [1.586, 2.443], [1.596, 2.472],
    [1.606, 2.500], [1.616, 2.529], [1.626, 2.558], [1.636, 2.586], [1.646, 2.615],
    [1.657, 2.644], [1.667, 2.673], [1.677, 2.702], [1.687, 2.732], [1.697, 2.761],
        [1.707, 2.791], [1.717, 2.820], [1.727, 2.850], [1.738, 2.880], [1.748, 2.910],
    [1.758, 2.940], [1.768, 2.970], [1.778, 3.000], [1.788, 3.030], [1.798, 3.061],
    [1.808, 3.091], [1.818, 3.122], [1.828, 3.152], [1.839, 3.183], [1.849, 3.214],
    [1.859, 3.245], [1.869, 3.276], [1.879, 3.307], [1.889, 3.338], [1.899, 3.369],
    [1.909, 3.400], [1.919, 3.432], [1.930, 3.463], [1.940, 3.495], [1.950, 3.526],
    [1.960, 3.558], [1.970, 3.590], [1.980, 3.622], [1.990, 3.654], [2.000, 4.000]

        ]
position = int(input("Enter the position of that point: "))
print(linear_d_approx(points ,[1.283 , 1.639] , position ))
